{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,uBACjCE,QAASH,SAASC,cAAc,sBAChCG,UAAWJ,SAASC,cAAc,wBAClCI,UAAWL,SAASC,cAAc,0BAGpCH,EAAKC,QAAQO,iBAAiB,UAAU,SAAAC,GACtCA,EAAEC,iBAKF,IAJA,IAAMC,EAAQC,OAAOZ,EAAKI,SAASS,OAC7BC,EAASF,OAAOZ,EAAKM,UAAUO,OAC/BE,EAAOH,OAAOZ,EAAKK,QAAQQ,OAExBG,EAAI,EAAGA,EAAIF,EAAQE,IAC1B1B,EAAc0B,EAAI,EAAGL,EAAQK,EAAID,GAC9BE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('input[name=\"delay\"]'),\n  stepRef: document.querySelector('input[name=\"step\"]'),\n  amountRef: document.querySelector('input[name=\"amount\"]'),\n  submitRef: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.formRef.addEventListener('submit', e => {\n  e.preventDefault();\n  const delay = Number(refs.delayRef.value);\n  const amount = Number(refs.amountRef.value);\n  const step = Number(refs.stepRef.value);\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","submitRef","addEventListener","e","preventDefault","delay1","Number","value","amount","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3a6346fd.js.map"}